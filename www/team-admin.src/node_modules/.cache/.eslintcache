[{"C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\index.tsx":"1","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\Router.tsx":"2","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Login.tsx":"3","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\index.tsx":"4","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\RunnersTable\\index.tsx":"5","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\ManageTeam\\index.tsx":"6","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\RunnersTable\\InsertRow.tsx":"7","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\ManageTeam\\ConfirmationWindow.tsx":"8","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\RunnersTable\\TableRow.tsx":"9"},{"size":400,"mtime":1681324732890,"results":"10","hashOfConfig":"11"},{"size":312,"mtime":1681325336448,"results":"12","hashOfConfig":"11"},{"size":1521,"mtime":1681326490876,"results":"13","hashOfConfig":"11"},{"size":2258,"mtime":1681566043135,"results":"14","hashOfConfig":"11"},{"size":2327,"mtime":1681566003707,"results":"15","hashOfConfig":"11"},{"size":4445,"mtime":1681565810686,"results":"16","hashOfConfig":"11"},{"size":2701,"mtime":1681564954264,"results":"17","hashOfConfig":"11"},{"size":1613,"mtime":1681402408646,"results":"18","hashOfConfig":"11"},{"size":3507,"mtime":1681402651589,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hs0zaj",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\index.tsx",[],[],"C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\Router.tsx",[],[],"C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Login.tsx",[],[],"C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\index.tsx",[],[],"C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\RunnersTable\\index.tsx",["50"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport TableRow from \"./TableRow\";\r\nimport InsertRow from \"./InsertRow\";\r\n\r\ntype Props = {\r\n  teamId: number;\r\n};\r\n\r\nexport type Runner = {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  speed: string;\r\n  token: string;\r\n  isAdmin: boolean;\r\n  teamId: number;\r\n};\r\n\r\nconst RunnersTable: React.FC<Props> = ({ teamId }) => {\r\n  const [runners, setRunners] = React.useState<Runner[]>([]);\r\n\r\n  const loadRunners = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const res = await axios.get(\"/api/v1/teams/\" + teamId + \"/runners\", {\r\n      headers: { Authorization: \"Bearer \" + token },\r\n    });\r\n    const runnersData = res.data as Runner[];\r\n    setRunners(runnersData);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadRunners();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col\">\r\n      <div className=\"flex w-full justify-between items-center\">\r\n        <h1 className=\"text-2xl font-medium\">Runners</h1>\r\n        <a\r\n          className=\"border border-gray-500 bg-gray-200 px-2 py-1 rounded-md font-medium\"\r\n          href=\"http://stage-planner.localhost\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <i className=\"fa fa-list text-sm mr-1\"></i> Stage Planner\r\n        </a>\r\n      </div>\r\n      <div className=\"flex flex-col w-full border border-gray-500 mt-3\">\r\n        <div className=\"flex border-b border-gray-500\">\r\n          <div className=\"flex-1 border-r border-gray-500 px-2 py-1 font-medium\">\r\n            First Name\r\n          </div>\r\n          <div className=\"flex-1 border-r border-gray-500 px-2 py-1 font-medium\">\r\n            Last Name\r\n          </div>\r\n          <div className=\"flex-1 border-r border-gray-500 px-2 py-1 font-medium\">\r\n            Speed\r\n          </div>\r\n          <div className=\"flex-1 border-r border-gray-500 px-2 py-1 font-medium\">\r\n            Token\r\n          </div>\r\n          <div className=\"w-[8vw] border-gray-500 px-2 py-1 font-medium\">\r\n            Actions\r\n          </div>\r\n        </div>\r\n\r\n        {runners.map((runner, index) => {\r\n          return <TableRow key={index} runner={runner} />;\r\n        })}\r\n\r\n        {runners.length < 10 && <InsertRow teamId={teamId} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunnersTable;\r\n","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\ManageTeam\\index.tsx",["51"],[],"import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\ntype Team = {\r\n  id: number;\r\n  name: string;\r\n  contactEmail: string;\r\n  location: string;\r\n  plannedStartingTime: string;\r\n  startingTime: string | null;\r\n};\r\n\r\ntype Props = {\r\n  setShowConfirmationWindow: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst ManageTeam: React.FC<Props> = ({ setShowConfirmationWindow }) => {\r\n  const [teamId, setTeamId] = React.useState<number>(-1);\r\n\r\n  const [originalTeamData, setOriginalTeamData] = React.useState<Team | null>();\r\n\r\n  const [teamName, setTeamName] = React.useState<string>(\"\");\r\n  const teamNameChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setTeamName(e.currentTarget.value);\r\n  };\r\n  const [contactEmail, setContactEmail] = React.useState<string>(\"\");\r\n  const contactEmailChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setContactEmail(e.currentTarget.value);\r\n  };\r\n  const [location, setLocation] = React.useState<string>(\"\");\r\n  const locationChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setLocation(e.currentTarget.value);\r\n  };\r\n\r\n  const [inputChanged, setInputChanged] = React.useState<boolean>(false);\r\n  React.useEffect(() => {\r\n    if (originalTeamData) {\r\n      if (\r\n        originalTeamData.name === teamName &&\r\n        originalTeamData.contactEmail === contactEmail &&\r\n        originalTeamData.location === location\r\n      ) {\r\n        setInputChanged(false);\r\n      } else {\r\n        setInputChanged(true);\r\n      }\r\n    }\r\n  }, [teamName, contactEmail, location]);\r\n\r\n  const loadTeamData = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const res = await axios.get(\"/api/v1/me\", {\r\n      headers: { Authorization: \"Bearer \" + token },\r\n    });\r\n    const team = res.data.team;\r\n    setOriginalTeamData(team);\r\n    setTeamId(team.id);\r\n    setTeamName(team.name);\r\n    setContactEmail(team.contactEmail);\r\n    setLocation(team.location);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadTeamData();\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/v1/teams/${teamId}`,\r\n        {\r\n          name: teamName,\r\n          contactEmail,\r\n          location,\r\n        },\r\n        { headers: { Authorization: \"Bearer \" + token } }\r\n      );\r\n\r\n      setOriginalTeamData(res.data as Team);\r\n      setInputChanged(false);\r\n\r\n      alert(\"The team's data has been updated.\");\r\n    } catch (err) {\r\n      alert(\"Unknown error occured.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-[20vw] flex flex-col\">\r\n      <h1 className=\"text-2xl font-medium mb-4\">Manage your team</h1>\r\n      <label htmlFor=\"teamName\">Team name</label>\r\n      <input\r\n        className=\"border border-gray-500 rounded-md pl-2 py-1\"\r\n        type=\"text\"\r\n        value={teamName}\r\n        onChange={teamNameChanged}\r\n        id=\"teamName\"\r\n        aria-label=\"teamName\"\r\n      />\r\n      <label className=\"mt-1\" htmlFor=\"contactEmail\">\r\n        Contact email\r\n      </label>\r\n      <input\r\n        className=\"border border-gray-500 rounded-md pl-2 py-1\"\r\n        type=\"text\"\r\n        value={contactEmail}\r\n        onChange={contactEmailChanged}\r\n        id=\"contactEmail\"\r\n        aria-label=\"contactEmail\"\r\n      />\r\n      <label className=\"mt-1\" htmlFor=\"location\">\r\n        Location\r\n      </label>\r\n      <input\r\n        className=\"border border-gray-500 rounded-md pl-2 py-1\"\r\n        type=\"text\"\r\n        value={location}\r\n        onChange={locationChanged}\r\n        id=\"location\"\r\n        aria-label=\"location\"\r\n      />\r\n\r\n      <div className=\"flex w-full justify-end mt-3 space-x-2\">\r\n        <button\r\n          className=\"rounded-md bg-red-200 px-2 py-1 border border-red-500 font-medium\"\r\n          onClick={() => setShowConfirmationWindow(true)}\r\n        >\r\n          Delete team\r\n        </button>\r\n        {inputChanged ? (\r\n          <button\r\n            className=\"rounded-md bg-gray-200 px-2 py-1 border border-gray-500 font-medium\"\r\n            onClick={handleSave}\r\n          >\r\n            Save\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"rounded-md bg-gray-200 px-2 py-1 border border-gray-500 font-medium text-gray-300\"\r\n            onClick={handleSave}\r\n            disabled\r\n          >\r\n            Save\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageTeam;\r\n","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\RunnersTable\\InsertRow.tsx",["52"],[],"import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Runner } from \".\";\r\n\r\ntype Props = {\r\n  teamId: number;\r\n};\r\n\r\nconst InsertRow: React.FC<Props> = ({ teamId }) => {\r\n  const [firstName, setFirstName] = React.useState<string>(\"\");\r\n  const firstNameChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setFirstName(e.currentTarget.value);\r\n  };\r\n  const [lastName, setLastName] = React.useState<string>(\"\");\r\n  const lastNameChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setLastName(e.currentTarget.value);\r\n  };\r\n  const [speed, setSpeed] = React.useState<string>(\"\");\r\n  const speedChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setSpeed(e.currentTarget.value);\r\n  };\r\n  const handleAdd = async () => {\r\n    if (!firstName || !lastName || !speed) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    try {\r\n      await axios.post(\r\n        \"/api/v1/teams/\" + teamId + \"/runners\",\r\n        { firstName, lastName, speed },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      );\r\n\r\n      alert(\"A new runner has been created.\");\r\n      window.location.reload();\r\n    } catch (err) {\r\n      alert(\"Unknown error occured.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <div className=\"flex-1 border-r border-gray-500 px-2 py-1\">\r\n        <input\r\n          type=\"text\"\r\n          aria-label=\"firstName\"\r\n          className=\"border border-gray-500 px-2 py-1 w-full rounded\"\r\n          value={firstName}\r\n          onChange={firstNameChanged}\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 border-r border-gray-500 px-2 py-1\">\r\n        <input\r\n          type=\"text\"\r\n          aria-label=\"lastName\"\r\n          className=\"border border-gray-500 px-2 py-1 w-full rounded\"\r\n          value={lastName}\r\n          onChange={lastNameChanged}\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 border-r border-gray-500 px-2 py-1\">\r\n        <input\r\n          type=\"text\"\r\n          aria-label=\"speed\"\r\n          className=\"border border-gray-500 px-2 py-1 w-full rounded\"\r\n          value={speed}\r\n          onChange={speedChanged}\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 border-r border-gray-500 px-2 py-1\" />\r\n\r\n      <div className=\"w-[8vw] flex justify-end items-center px-4\">\r\n        <button\r\n          className=\"text-sm rounded-full p-2 flex items-center justify-center bg-gray-200\"\r\n          aria-label=\"add\"\r\n          onClick={handleAdd}\r\n        >\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertRow;\r\n","C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\ManageTeam\\ConfirmationWindow.tsx",[],[],"C:\\Projects\\[Web]\\[WS2024]\\3-[Döntő]\\www\\team-admin.src\\src\\pages\\Home\\RunnersTable\\TableRow.tsx",[],[],{"ruleId":"53","severity":1,"message":"54","line":34,"column":6,"nodeType":"55","endLine":34,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":48,"column":6,"nodeType":"55","endLine":48,"endColumn":40,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":16},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'loadRunners'. Either include it or remove the dependency array.","ArrayExpression",["63"],"React Hook React.useEffect has a missing dependency: 'originalTeamData'. Either include it or remove the dependency array.",["64"],"@typescript-eslint/no-unused-vars","'Runner' is defined but never used.","Identifier","unusedVar",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [loadRunners]",{"range":"69","text":"70"},"Update the dependencies array to be: [teamName, contactEmail, location, originalTeamData]",{"range":"71","text":"72"},[821,823],"[loadRunners]",[1510,1544],"[teamName, contactEmail, location, originalTeamData]"]